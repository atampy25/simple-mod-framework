name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: .yarn/cache
          key: buildCachev17

      - name: Install dependencies
        run: |
          yarn

      - name: Build EXE
        run: |
          yarn build-exe

      - name: Download RPKG
        uses: aochmann/actions-download-artifact@5709392f11b5937bd316e52687ad87f7deced5f5
        with:
          repo: glacier-modding/RPKG-Tool
          name: rpkg
          latest: true
          path: './Third-Party'

      - name: Download ResourceTool
        uses: aochmann/actions-download-artifact@5709392f11b5937bd316e52687ad87f7deced5f5
        with:
          repo: OrfeasZ/ZHMTools
          name: ResourceTool-win-x64
          latest: true
          path: './Third-Party'

      - name: Build GUI
        run: |
          yarn lom:make

      - name: Ready for zip
        run: |
          New-Item -ItemType Directory dist
          New-Item -ItemType Directory dist/Third-Party
          New-Item -ItemType Directory dist/Info
          New-Item -ItemType Directory "dist/Load Order Manager"
          robocopy ./Third-Party ./dist/Third-Party /COPYALL /E; if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }
          robocopy "./For Build" ./dist /COPYALL /E; if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }
          robocopy ./docs ./dist/Info /COPYALL /E; if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }
          robocopy ".\Load Order Manager\out\Load Order Manager-win32-x64" "./dist/Load Order Manager" /COPYALL /E; if ($lastexitcode -lt 8) { $global:LASTEXITCODE = $null }
          copy Deploy.exe dist
          New-Item -Path dist -Name "Mod Manager.cmd" -ItemType "file" -Value "@echo off`ncd `"Load Order Manager`"`nstart `"`" `"Load Order Manager.exe`""

      - name: Zip
        uses: TheDoctor0/zip-release@4fb9e4ff72847dd3d1c111cf63834e353ed7cb3d
        with:
          filename: Release.zip
          directory: dist

      - name: 'Get latest tag'
        id: latestTag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1.1.0'
        with:
          fallback: unknown

      - name: 'Generate changelog'
        id: changelog
        uses: loopwerk/tag-changelog@v1.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,docs,chore,build,amend,refactor

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.latestTag.outputs.tag }}
          body: ${{ steps.changelog.outputs.changes }}
          tag_name: ${{ steps.latestTag.outputs.tag }}
          repository: hitman-resources/simple-mod-framework
          files: dist/Release.zip

  sentry-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Sentry Release
        uses: getsentry/action-release@v1.1.6
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          version: ${{ github.ref }}
